void dynamics( double* U, double* X, double* P_dynamics, double* dX)    
{                                                     
                                                      
////////////////////////////////////////////////////////// 
// DO NOT EDIT THIS FILE								// 
//														// 
// It has been automatically generated by:				// 
//     WriteDynamicsFile.cpp							// 
//														// 
// The data and names for the class variables come from // 
// the file Set_Parameters.m and comments can be found  // 
// there.												// 
//														// 
// Written by Matthew Kelly								// 
// matthew.kelly2@gmail.com								// 
////////////////////////////////////////////////////////// 
                                                         
                                                         
// Declare variables:                                     
 double th, phi, Dth, Dphi;    //State variables          
 double M1, M2, F1_x, F1_y, F2_x, F2_y;   //Input variables       
                                                         
 // Matlab generated local variables                     
double  tmp2, tmp3, tmp4, tmp5, tmp6, tmp7, tmp8, tmp9;  
double  DDth;  
double  tmp10, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16, tmp17, tmp18, tmp19, tmp20, tmp21, tmp22, tmp23;  
double  DDphi;  
                                                     
// Extract the parameters from the parameter file       
#include "GetParameters_dynamics.h"                   
                                                     
// Store the state variables                         
th     = X[0];                                     
phi    = X[1];                                     
Dth    = X[2];                                     
Dphi   = X[3];                                     
                                                     
// Store the input variables                     
M1   = U[0];                                       
M2   = U[1];                                       
F1_x = U[2];                                       
F1_y = U[3];                                       
F2_x = U[4];                                       
F2_y = U[5];                                       
                                                     
 // Automatically generated equations:                     
  tmp2 = phi*2.0;  
  tmp3 = tmp2-th;  
  tmp4 = cos(th);  
  tmp5 = sin(th);  
  tmp6 = phi-th;  
  tmp7 = L*L;  
  tmp8 = tmp2-th*2.0;  
  tmp9 = cos(tmp3);  
DDth =  (1.0/(L*L)*(M1*2.0-M2*2.0-M2*cos(tmp6)*2.0-F1_x*L*tmp5*2.0+F1_y*L*tmp4*2.0-F2_x*L*tmp5+F2_y*L*tmp4-F2_y*L*tmp9+F2_x*L*sin(tmp3)+(Dphi*Dphi)*m2*tmp7*sin(tmp6)*2.0+(Dth*Dth)*m2*tmp7*sin(tmp8)-L*g*m1*tmp4*2.0-L*g*m2*tmp4+L*g*m2*tmp9))/(m1*2.0+m2-m2*cos(tmp8));  
  tmp10 = phi-th;  
  tmp11 = cos(tmp10);  
  tmp12 = cos(phi);  
  tmp13 = sin(phi);  
  tmp14 = th*2.0;  
  tmp15 = phi-tmp14;  
  tmp16 = cos(tmp15);  
  tmp17 = sin(tmp15);  
  tmp18 = m2*m2;  
  tmp19 = L*L;  
  tmp20 = phi*2.0;  
  tmp21 = Dth*Dth;  
  tmp22 = sin(tmp10);  
  tmp23 = -tmp14+tmp20;  
DDphi =  -(1.0/(L*L)*(M2*m1*-2.0-M2*m2*2.0+M1*m2*tmp11*2.0-M2*m2*tmp11*2.0+tmp18*tmp19*tmp21*tmp22*2.0-F1_x*L*m2*tmp13+F1_y*L*m2*tmp12+F2_x*L*m1*tmp13*2.0-F2_y*L*m1*tmp12*2.0+F2_x*L*m2*tmp13-F2_y*L*m2*tmp12+F1_y*L*m2*tmp16+F1_x*L*m2*tmp17+F2_y*L*m2*tmp16+F2_x*L*m2*tmp17+(Dphi*Dphi)*tmp18*tmp19*sin(tmp23)+L*g*tmp12*tmp18-L*g*tmp16*tmp18+L*g*m1*m2*tmp12-L*g*m1*m2*tmp16+m1*m2*tmp19*tmp21*tmp22*2.0))/(m2*(m1*2.0+m2-m2*cos(tmp23)));  
                                                     
// Pack up the state derivative                    
dX[0] = Dth;                                     
dX[1] = Dphi;                                     
dX[2] = DDth;                                     
dX[3] = DDphi;                                     
                                                     
}                                                  
